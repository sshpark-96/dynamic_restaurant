/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={"./node_modules/css-loader/dist/cjs.js!./src/css/contact.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var s=n("./node_modules/css-loader/dist/runtime/sourceMaps.js"),o=n.n(s),a=n("./node_modules/css-loader/dist/runtime/api.js"),r=n.n(a)()(o());r.push([e.id,'.contact_page {\n  margin: 0 15% 0 15%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  gap: 50px;\n}\n\n.contact_form {\n  background-color: aquamarine;\n  padding: 15px;\n  width: 300px;\n  height: 400px;\n  color: black;\n  font-size: x-large;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,\n    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n}\n\n.form_text {\n  resize: none;\n  max-width: 280px;\n  max-height: 180px;\n}\n',"",{version:3,sources:["webpack://./src/css/contact.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,SAAS;AACX;;AAEA;EACE,4BAA4B;EAC5B,aAAa;EACb,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB;gEAC8D;AAChE;;AAEA;EACE,YAAY;EACZ,gBAAgB;EAChB,iBAAiB;AACnB",sourcesContent:['.contact_page {\n  margin: 0 15% 0 15%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  gap: 50px;\n}\n\n.contact_form {\n  background-color: aquamarine;\n  padding: 15px;\n  width: 300px;\n  height: 400px;\n  color: black;\n  font-size: x-large;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,\n    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n}\n\n.form_text {\n  resize: none;\n  max-width: 280px;\n  max-height: 180px;\n}\n'],sourceRoot:""}]);const i=r},"./node_modules/css-loader/dist/cjs.js!./src/css/index.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var s=n("./node_modules/css-loader/dist/runtime/sourceMaps.js"),o=n.n(s),a=n("./node_modules/css-loader/dist/runtime/api.js"),r=n.n(a),i=n("./node_modules/css-loader/dist/runtime/getUrl.js"),c=n.n(i),l=new URL(n("./src/img/wood_bg.jpg"),n.b),d=r()(o()),u=c()(l);d.push([e.id,"#content {\n  background-image: url("+u+");\n  background-size: absolute;\n  background-repeat: repeat-y;\n  scrollbar-width: none;\n  min-height: 100vh;\n}\n::-webkit-scrollbar {\n  width: 0;\n}\n\n.tab_content {\n  display: none;\n}\n\n.open {\n  display: flex;\n}\n","",{version:3,sources:["webpack://./src/css/index.css"],names:[],mappings:"AAAA;EACE,yDAA2C;EAC3C,yBAAyB;EACzB,2BAA2B;EAC3B,qBAAqB;EACrB,iBAAiB;AACnB;AACA;EACE,QAAQ;AACV;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf",sourcesContent:['#content {\n  background-image: url("../img/wood_bg.jpg");\n  background-size: absolute;\n  background-repeat: repeat-y;\n  scrollbar-width: none;\n  min-height: 100vh;\n}\n::-webkit-scrollbar {\n  width: 0;\n}\n\n.tab_content {\n  display: none;\n}\n\n.open {\n  display: flex;\n}\n'],sourceRoot:""}]);const m=d},"./node_modules/css-loader/dist/cjs.js!./src/css/landing.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var s=n("./node_modules/css-loader/dist/runtime/sourceMaps.js"),o=n.n(s),a=n("./node_modules/css-loader/dist/runtime/api.js"),r=n.n(a),i=n("./node_modules/css-loader/dist/runtime/getUrl.js"),c=n.n(i),l=new URL(n("./src/img/bread.jpg"),n.b),d=r()(o()),u=c()(l);d.push([e.id,".welcome_text {\n  text-align: center;\n  background-image: url("+u+");\n  background-size: cover;\n  background-position: bottom;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  transition: 1s;\n}\n\n.welcome_text p {\n  padding-top: 150px;\n  color: whitesmoke;\n  font-size: 50px;\n  font-family: Arial, Helvetica, sans-serif;\n  white-space: pre;\n}\n\n.welcome_button {\n  border: none;\n  font-size: 50px;\n  background-color: transparent;\n  color: whitesmoke;\n  border-radius: 15px;\n  transition: 0.3s;\n}\n\n.welcome_button:hover {\n  transform: scale(1.3);\n  border: white solid 1px;\n}\n","",{version:3,sources:["webpack://./src/css/landing.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,yDAAyC;EACzC,sBAAsB;EACtB,2BAA2B;EAC3B,aAAa;;EAEb,aAAa;EACb,sBAAsB;EACtB,mBAAmB;;EAEnB,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;EACf,yCAAyC;EACzC,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,6BAA6B;EAC7B,iBAAiB;EACjB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,qBAAqB;EACrB,uBAAuB;AACzB",sourcesContent:['.welcome_text {\n  text-align: center;\n  background-image: url("../img/bread.jpg");\n  background-size: cover;\n  background-position: bottom;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  transition: 1s;\n}\n\n.welcome_text p {\n  padding-top: 150px;\n  color: whitesmoke;\n  font-size: 50px;\n  font-family: Arial, Helvetica, sans-serif;\n  white-space: pre;\n}\n\n.welcome_button {\n  border: none;\n  font-size: 50px;\n  background-color: transparent;\n  color: whitesmoke;\n  border-radius: 15px;\n  transition: 0.3s;\n}\n\n.welcome_button:hover {\n  transform: scale(1.3);\n  border: white solid 1px;\n}\n'],sourceRoot:""}]);const m=d},"./node_modules/css-loader/dist/cjs.js!./src/css/menu.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var s=n("./node_modules/css-loader/dist/runtime/sourceMaps.js"),o=n.n(s),a=n("./node_modules/css-loader/dist/runtime/api.js"),r=n.n(a)()(o());r.push([e.id,'.menu_items {\n  padding: 150px 0 50px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n}\n\n.menu_item {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: burlywood;\n  padding: 15px;\n  border-radius: 15px;\n}\n\n.menu_item img {\n  width: 300px;\n  height: 300px;\n  object-fit: cover;\n  object-position: center;\n  border-radius: 15px;\n}\n\n.item_text {\n  width: 500px;\n  padding-left: 50px;\n  color: black;\n  font-size: x-large;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,\n    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n}\n',"",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,2BAA2B;EAC3B,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,iBAAiB;EACjB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB;gEAC8D;AAChE",sourcesContent:['.menu_items {\n  padding: 150px 0 50px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n}\n\n.menu_item {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: burlywood;\n  padding: 15px;\n  border-radius: 15px;\n}\n\n.menu_item img {\n  width: 300px;\n  height: 300px;\n  object-fit: cover;\n  object-position: center;\n  border-radius: 15px;\n}\n\n.item_text {\n  width: 500px;\n  padding-left: 50px;\n  color: black;\n  font-size: x-large;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,\n    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n}\n'],sourceRoot:""}]);const i=r},"./node_modules/css-loader/dist/cjs.js!./src/css/tabs.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var s=n("./node_modules/css-loader/dist/runtime/sourceMaps.js"),o=n.n(s),a=n("./node_modules/css-loader/dist/runtime/api.js"),r=n.n(a)()(o());r.push([e.id,'/* For Header Content */\n.nav_bar {\n  display: flex;\n  justify-content: space-between;\n  padding: 25px 10%;\n  align-items: center;\n  height: 50px;\n  background: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: transparent;\n}\n\n.logo {\n  font-size: 50px;\n  color: azure;\n  font-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;\n  font-weight: 700;\n}\n\n.tabs {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n}\n\n.tabs li {\n  list-style: none;\n  color: whitesmoke;\n  font-size: 18px;\n  font-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;\n  cursor: pointer;\n}\n',"",{version:3,sources:["webpack://./src/css/tabs.css"],names:[],mappings:"AAAA,uBAAuB;AACvB;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,gBAAgB;EAChB,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,6BAA6B;AAC/B;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,sEAAsE;EACtE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,eAAe;EACf,sEAAsE;EACtE,eAAe;AACjB",sourcesContent:['/* For Header Content */\n.nav_bar {\n  display: flex;\n  justify-content: space-between;\n  padding: 25px 10%;\n  align-items: center;\n  height: 50px;\n  background: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: transparent;\n}\n\n.logo {\n  font-size: 50px;\n  color: azure;\n  font-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;\n  font-weight: 700;\n}\n\n.tabs {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n}\n\n.tabs li {\n  list-style: none;\n  color: whitesmoke;\n  font-size: 18px;\n  font-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;\n  cursor: pointer;\n}\n'],sourceRoot:""}]);const i=r},"./node_modules/css-loader/dist/runtime/api.js":e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",s=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),s&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),s&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,s,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(s)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(r[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);s&&r[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},"./node_modules/css-loader/dist/runtime/getUrl.js":e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),a="/*# ".concat(o," */"),r=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(r).concat([a]).join("\n")}return[t].join("\n")}},"./src/css/contact.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var s=n("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),o=n.n(s),a=n("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),r=n.n(a),i=n("./node_modules/style-loader/dist/runtime/insertBySelector.js"),c=n.n(i),l=n("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),d=n.n(l),u=n("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),m=n.n(u),A=n("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),p=n.n(A),g=n("./node_modules/css-loader/dist/cjs.js!./src/css/contact.css"),f={};f.styleTagTransform=p(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=m();o()(g.default,f);const b=g.default&&g.default.locals?g.default.locals:void 0},"./src/css/index.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var s=n("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),o=n.n(s),a=n("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),r=n.n(a),i=n("./node_modules/style-loader/dist/runtime/insertBySelector.js"),c=n.n(i),l=n("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),d=n.n(l),u=n("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),m=n.n(u),A=n("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),p=n.n(A),g=n("./node_modules/css-loader/dist/cjs.js!./src/css/index.css"),f={};f.styleTagTransform=p(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=m();o()(g.default,f);const b=g.default&&g.default.locals?g.default.locals:void 0},"./src/css/landing.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var s=n("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),o=n.n(s),a=n("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),r=n.n(a),i=n("./node_modules/style-loader/dist/runtime/insertBySelector.js"),c=n.n(i),l=n("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),d=n.n(l),u=n("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),m=n.n(u),A=n("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),p=n.n(A),g=n("./node_modules/css-loader/dist/cjs.js!./src/css/landing.css"),f={};f.styleTagTransform=p(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=m();o()(g.default,f);const b=g.default&&g.default.locals?g.default.locals:void 0},"./src/css/menu.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var s=n("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),o=n.n(s),a=n("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),r=n.n(a),i=n("./node_modules/style-loader/dist/runtime/insertBySelector.js"),c=n.n(i),l=n("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),d=n.n(l),u=n("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),m=n.n(u),A=n("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),p=n.n(A),g=n("./node_modules/css-loader/dist/cjs.js!./src/css/menu.css"),f={};f.styleTagTransform=p(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=m();o()(g.default,f);const b=g.default&&g.default.locals?g.default.locals:void 0},"./src/css/tabs.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var s=n("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),o=n.n(s),a=n("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),r=n.n(a),i=n("./node_modules/style-loader/dist/runtime/insertBySelector.js"),c=n.n(i),l=n("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),d=n.n(l),u=n("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),m=n.n(u),A=n("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),p=n.n(A),g=n("./node_modules/css-loader/dist/cjs.js!./src/css/tabs.css"),f={};f.styleTagTransform=p(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=m();o()(g.default,f);const b=g.default&&g.default.locals?g.default.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":e=>{var t=[];function n(e){for(var n=-1,s=0;s<t.length;s++)if(t[s].identifier===e){n=s;break}return n}function s(e,s){for(var a={},r=[],i=0;i<e.length;i++){var c=e[i],l=s.base?c[0]+s.base:c[0],d=a[l]||0,u="".concat(l," ").concat(d);a[l]=d+1;var m=n(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==m)t[m].references++,t[m].updater(A);else{var p=o(A,s);s.byIndex=i,t.splice(i,0,{identifier:u,updater:p,references:1})}r.push(u)}return r}function o(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=s(e=e||[],o=o||{});return function(e){e=e||[];for(var r=0;r<a.length;r++){var i=n(a[r]);t[i].references--}for(var c=s(e,o),l=0;l<a.length;l++){var d=n(a[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=c}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":e=>{var t={};e.exports=function(e,n){var s=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,o&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(s,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},"./src/pages/contact.js":(e,t,n)=>{n.r(t),n.d(t,{contact:()=>s});n("./src/css/contact.css");const s=(()=>{const e=document.querySelector("#content"),t=document.createElement("div");t.classList.add("tab_content","contact_page"),t.setAttribute("data-tab-content","2");const n=document.createElement("div");n.innerHTML='<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7101541.931922254!2d20.196066924056538!3d-29.645817088872853!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x1e957201659e7bf3%3A0xa23df0d0307e54dd!2sMcDonald&#39;s%20Mall%20of%20Africa!5e0!3m2!1sen!2sus!4v1643329779190!5m2!1sen!2sus" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy"></iframe>',n.classList.add("map");const s=document.createElement("form");s.classList.add("contact_form"),s.setAttribute("action","#"),s.innerHTML='<label for="name">Your Name:</label><br><input type="text" name="name""><br><label for="phone">Your Number:</label><br><input type="tel" name="phone"><br><label for="text">Your Message</label><br><textarea name="text" class="form_text" rows="4" cols="50" value="What would you like to tell us?"></textarea><br><input type="submit" value="Submit"></input>',t.appendChild(n),t.appendChild(s),e.appendChild(t)})()},"./src/pages/landing.js":(e,t,n)=>{n.r(t),n.d(t,{landing_page:()=>s});n("./src/css/landing.css");const s=(()=>{const e=document.querySelector("#content"),t=document.createElement("div");t.setAttribute("data-tab-content","0"),t.className="welcome_text",t.classList.add("open","tab_content");const n=document.createElement("p");n.textContent="Feeling Hungry Yet?";const s=document.createElement("button");s.textContent="It's Time To Eat",s.classList.add("welcome_button"),t.appendChild(n),t.appendChild(s),e.appendChild(t)})();document.querySelector(".welcome_button").addEventListener("click",(()=>{let e=document.querySelector('.tab_link[data-tab-trigger = "1"]'),t=document.querySelector('.tab_content[data-tab-content = "1"]');document.querySelector(".tab_link.active").classList.remove("active"),document.querySelector(".tab_content.open").classList.remove("open"),t.classList.add("open"),e.classList.add("active")}))},"./src/pages/menu.js":(e,t,n)=>{n.r(t),n.d(t,{menu:()=>c});n("./src/css/menu.css");var s=n("./src/img/burger.jpg"),o=n("./src/img/cake.jpg"),a=n("./src/img/ramen.jpg"),r=n("./src/img/salad.jpg"),i=n("./src/img/toast.jpg");const c=(()=>{let e=[{name:"Super Good Ramen",desc:"It's pretty good. And it's ramen. That's all I need to say.",price:10.95,pic:a},{name:"Heart Attack Burger",desc:"Redbull gives you wings, this burger gives you a heart attack. In a good way.",price:11.59,pic:s},{name:"Berry Sweet Toast",desc:"It has berries, and it's sweet. And bananas. Can't get any better than this for a toast.",price:10.95,pic:i},{name:"Garden Green Salad",desc:"It's grass. Lots of grass. And some eggs. I can feel the healthiness running through my veins.",price:9.95,pic:r},{name:"Fruity Cake",desc:"It has fruits. And cake. Classic.",price:6.59,pic:o}];const t=document.querySelector("#content"),n=document.createElement("div");n.setAttribute("data-tab-content","1"),n.classList.add("tab_content","menu_items"),e.forEach(((e,t)=>{let s=document.createElement("div");s.classList.add("menu_item"),s.setAttribute("data-menu-item",t);let o=document.createElement("img");o.setAttribute("src",e.pic);let a=document.createElement("div");a.classList.add("item_text");let r=document.createElement("h3"),i=document.createElement("p");i.classList.add("item_desc");let c=document.createElement("p");c.classList.add("item_price"),r.textContent=e.name,i.textContent=e.desc,c.textContent=e.price,a.appendChild(r),a.appendChild(i),a.appendChild(c),s.appendChild(o),s.appendChild(a),n.appendChild(s)})),t.appendChild(n)})()},"./src/pages/tabs.js":(e,t,n)=>{n.r(t),n.d(t,{tab_display:()=>s});n("./src/css/tabs.css");const s=(()=>{const e=document.querySelector("#content"),t=document.createElement("nav");t.className="nav_bar";const n=document.createElement("div");n.className="logo",n.textContent="HungryHippo";const s=document.createElement("ul");s.className="tabs";let o=["Home","Menu","Contact Us"];for(let e of o){let t=document.createElement("li"),n=document.createElement("a");n.classList.add("tab_link"),0==o.indexOf(e)&&n.classList.add("active"),n.setAttribute("data-tab-trigger",o.indexOf(e)),n.textContent=e,t.appendChild(n),s.appendChild(t)}t.appendChild(n),t.appendChild(s),e.appendChild(t)})()},"./src/img/bread.jpg":(e,t,n)=>{e.exports=n.p+"b1798843a0b9444bc61f.jpg"},"./src/img/burger.jpg":(e,t,n)=>{e.exports=n.p+"a83dd5907a8c25f4c2d6.jpg"},"./src/img/cake.jpg":(e,t,n)=>{e.exports=n.p+"03e5a3706b9ae507d555.jpg"},"./src/img/ramen.jpg":(e,t,n)=>{e.exports=n.p+"6f0b11fc261fbb2b7396.jpg"},"./src/img/salad.jpg":(e,t,n)=>{e.exports=n.p+"3504140a717efbdd2768.jpg"},"./src/img/toast.jpg":(e,t,n)=>{e.exports=n.p+"8bc1b2b293b46198cfba.jpg"},"./src/img/wood_bg.jpg":(e,t,n)=>{e.exports=n.p+"816270168eed70d6bc9b.jpg"}},t={};function n(s){var o=t[s];if(void 0!==o)return o.exports;var a=t[s]={id:s,exports:{}};return e[s](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var s=t.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href;var s={};(()=>{n.r(s);n("./src/pages/tabs.js"),n("./src/pages/landing.js"),n("./src/pages/menu.js"),n("./src/pages/contact.js"),n("./src/css/index.css");document.querySelectorAll(".tab_link").forEach((e=>{console.log(e.textContent),e.addEventListener("click",(()=>{let t=e.dataset.tabTrigger,n=document.querySelector(`.tab_content[data-tab-content = "${t}"]`);document.querySelector(".tab_link.active").classList.remove("active"),document.querySelector(".tab_content.open").classList.remove("open"),e.classList.add("active"),n.classList.add("open")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,